akka {
  loggers          = [akka.event.slf4j.Slf4jLogger]
  loglevel         = debug
  log-dead-letters = on
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = akka.cluster.ClusterActorRefProvider
    debug {
      lifecycle = off
      unhandled = on
    }

    deployment {
      /game-engine/scores-repository-router {
        nr-of-instances = 100 // Attention: Total max number!
        routees.paths   = ["/user/scores-repository"]
        router          = random-group

        cluster {
          allow-local-routees          = off // Default is on
          enabled                      = on
          use-role                     = scores-repository
        }
      }
    }
  }

  cluster {
    auto-down-unreachable-after = 5 seconds
    seed-nodes                  = [
      "akka.tcp://akkollect-system@localhost:2551",
      "akka.tcp://akkollect-system@localhost:2552"
    ]
  }

  remote {
    enabled-transports = [akka.remote.netty.tcp]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = localhost
      port = 0
    }
  }

  cluster.metrics.enabled=off

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb-shared"

      leveldb-shared.store {
        dir    = "target/shared-journal"
        native = off
      }
    }

    snapshot-store {
      local.dir = "target/snapshots"
    }
  }
}

akkollect {
  app {
    ask-timeout = 5 seconds
  }

  game {
    move-count   = 200
    move-timeout = 10 milliseconds
    sparseness   = 5
  }

  game-engine {
    tournament-interval = 5 seconds
  }

  tournament {
    max-player-count-per-game = 5
    ask-timeout = 5 seconds
  }
}
